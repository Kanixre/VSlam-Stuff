Links and Commands
---------------------------------------------------------------------------------------------------
https://lcas.lincoln.ac.uk/nextcloud/index.php/s/q73JHG6xWwX3Lqf

-----
roscore
rosrun ORB_SLAM3 Mono Vocabulary/ORBvoc.txt Examples_old/ZED2.yaml
rosbag play --pause kg_lc_march.bag # replace with desired bag name
rosrun image_transport republish compressed in:=/front/zed_node/rgb/image_rect_color raw out:=/camera/image_raw

------
evo_ape tum GPS_march.tum KeyFrameTrajectory_yz.txt --verbose --align --correct_scale

evo_traj tum  KeyFrameTrajectory.txt -vap --ref GPS_march.tum --correct_scale

found no matching timestamps between reference and KeyFrameTrajectory
------------
import numpy as np

def extract_timestamps(file_path):
    """Extract timestamps from a TUM format file."""
    timestamps = []
    with open(file_path, 'r') as file:
        for line in file:
            if line.strip():  # Ensure the line is not empty
                timestamps.append(float(line.split()[0]))
    return timestamps

def update_file_with_timestamps(input_file, output_file, new_timestamps):
    """Update a TUM format file with new timestamps."""
    with open(input_file, 'r') as file, open(output_file, 'w') as out_file:
        lines = file.readlines()
        for i, line in enumerate(lines):
            # Replace the old timestamp with the new one
            new_line = f"{new_timestamps[i]:.6f} {line.split(maxsplit=1)[1]}"
            out_file.write(new_line)

# Paths to your files
file1_path = 'KeyFrameTrajectory_march_segment_test_2.txt'
file2_path = 'KeyFrameTrajectory_march.txt'
output_file_path = 'KeyFrameTrajectory_march_segment_test_2_updated.txt'

# Step 1: Extract timestamps from the reference file
reference_timestamps = np.array(extract_timestamps(file2_path))

# Step 2: Determine the number of entries in the file to be updated
num_entries_file1 = len(extract_timestamps(file1_path))

# Step 3: Generate new timestamps by scaling the reference timestamps
new_timestamps_file1 = np.linspace(reference_timestamps[0], reference_timestamps[-1], num_entries_file1)

# Step 4: Update the file with the new timestamps
update_file_with_timestamps(file1_path, output_file_path, new_timestamps_file1)

print(f"Updated file saved as {output_file_path}")


---------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------

header:
frame_id: "front_left_camera_optical_frame"
 
height: 1080
width: 1920
 
distortion_model: "plumb_bob"
 
D: [0.0, 0.0, 0.0, 0.0, 0.0]
 
K: [1057.0008544921875,       0.0,                952.2301635742188,
     0.0,                  1057.0008544921875,      553.5770263671875,     
     0.0,                                      0.0,                                           1.0]
 
R: [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]
 
P: [1057.0008544921875,       0.0,                952.2301635742188,
      0.0,                                     0.0,              1057.0008544921875,
      553.5770263671875,         0.0,                                            0.0,
      0.0,                                     1.0,                                           0.0]
 
binning_x: 0
binning_y: 0
roi:
x_offset: 0
y_offset: 0
height: 0
width: 0
do_rectify: False1920


https://arxiv.org/abs/2007.11898

